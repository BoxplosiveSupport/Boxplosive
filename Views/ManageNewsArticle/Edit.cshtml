@model nl.boxplosive.BackOffice.Mvc.Models.ManageNewsArticle.NewsArticleModel
@{
    DateTime minDate = OperatingDateTime.TodayLocal < Model.StartDate ? OperatingDateTime.TodayLocal : Model.StartDate;

    ViewBag.Title = @Model.PageTitle;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>News article</h2>
<div id="newsArticleEdit">
    @using (Html.BeginForm(MVC.ManageNewsArticle.ActionNames.Edit, MVC.ManageNewsArticle.Name, FormMethod.Post, new { @class = "form-horizontal", enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.Id)
        @Html.EditorFor(m => m.Title)
        if (Model.Visibility_DisplayField)
        {
            <div class="form-group">
                @Html.LabelFor(m => m.Visibility, new { @class = "col-sm-4 control-label" })
                <div class="col-sm-4">
                    @Html.EnumDropDownListFor(m => m.Visibility, htmlAttributes: new { @class = "form-control" })
                </div>
            </div>
        }
        else
        {
            @Html.HiddenFor(m => m.Visibility)
        }
        @Html.HiddenFor(m => m.AppCardStackDefinition_DisplayField)
        if (Model.AppCardStackDefinition_DisplayField)
        {
            <div class="form-group">
                @Html.LabelFor(m => m.AppCardStackDefinitionId, new { @class = "col-sm-4 control-label" })
                <div class="col-sm-4 @Html.Raw(!ViewData.ModelState.IsValidField("AppCardStackDefinitionId") ? "has-error" : "")">
                    @Html.DropDownListFor(m => m.AppCardStackDefinitionId, true, Model.AppCardStackDefinitions, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.AppCardStackDefinitionId, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else
        {
            @Html.HiddenFor(m => m.AppCardStackDefinitionId)
        }
        @Html.EditorFor(m => m.AppCardOrder, "Numeric")
        @Html.HiddenFor(m => m.AppCardTemplateIdIsDisplayed)
        if (Model.AppCardTemplateIdIsDisplayed)
        {
            <div class="form-group">
                @Html.LabelFor(m => m.AppCardTemplateId, new { @class = "col-sm-4 control-label" })
                <div class="col-sm-4 @Html.Raw(!ViewData.ModelState.IsValidField("AppCardTemplateId") ? "has-error" : "")">
                    @Html.DropDownListFor(m => m.AppCardTemplateId, true, Model.AppCardTemplateId_SelectListItems,
                        htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.AppCardTemplateId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div id="placeholders-group">
                @Html.EditorFor(m => m.Placeholders)
            </div>
        }
        @Html.EditorFor(m => m.Description, "HtmlEditor")
        @Html.EditorFor(m => m.Type)
        <div data-range>
            @Html.EditorFor(m => m.StartDate, "DatePicker", new { data_from = "", labelClass = "col-sm-4", minDate = minDate })
            @Html.EditorFor(m => m.EndDate, "DatePicker", new { data_to = "", labelClass = "col-sm-4", minDate = minDate })
        </div>
        @Html.HiddenFor(m => m.ImageUrl)
        @Html.EditorFor(m => m.Image1Upload, new { uploadActionUrl = Url.Action(MVC.ManageNewsArticle.ActionNames.UploadImage1, MVC.ManageNewsArticle.Name), imageUrl = Model.ImageUrl, fileUrlField = Html.IdFor(m => m.ImageUrl) })
        <div class="form-group">
            <div class="col-sm-offset-4 col-sm-8">
                <input type="submit" class="btn btn-default" value="Confirm" />&nbsp;
                @Html.ActionLink("Cancel", MVC.ManageNewsArticle.ActionNames.Index, MVC.ManageNewsArticle.Name, new { @class = "btn btn-link" })
            </div>
        </div>
    }
</div>

@section Scripts
{
    <script type="text/javascript">
    $(function () { // Shorthand for $(document).ready()
        $("#AppCardTemplateId").change(function() {
            var urlGetPlaceholders = '@Url.Action(MVC.ManageNewsArticle.GetPlaceholders())';
            var paramNewsArticleId = '@MVC.ManageNewsArticle.GetPlaceholdersParams.newsArticleId';
            var paramTemplateId = '@MVC.ManageNewsArticle.GetPlaceholdersParams.templateId';
            var valueTemplateId = '@Model.Id';
            $("#placeholders-group").load(urlGetPlaceholders + '?' + paramNewsArticleId + '=' + valueTemplateId + '&' + paramTemplateId + '=' + $(this).val());
        });
    });
    </script>
}