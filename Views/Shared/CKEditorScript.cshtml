@{ 
    var modelId = ViewData["modelId"] as string;
    var fieldSelector = ".wymtextarea";
    if (!string.IsNullOrWhiteSpace(modelId))
    {
        fieldSelector += "#" + modelId;
    }
}
<script type="text/javascript">
    // Check if jQuery is loaded
    if (window.jQuery) {
        $(function () { // Shorthand for $(document).ready()
            // https://stackoverflow.com/a/68430201
            $("@fieldSelector").each(function (index, element) {
                ClassicEditor
                    .create(element, {
                        // https://ckeditor.com/docs/ckeditor5/latest/features/headings.html#configuring-heading-levels
                        heading: {
                            options: [
                                { model: 'paragraph', title: 'Paragraph', class: 'ck-heading_paragraph' },
                                { model: 'heading1', view: 'h1', title: 'Heading 1', class: 'ck-heading_heading1' },
                                { model: 'heading2', view: 'h2', title: 'Heading 2', class: 'ck-heading_heading2' },
                                { model: 'heading3', view: 'h3', title: 'Heading 3', class: 'ck-heading_heading3' }
                            ]
                        },
                        image: {
                            // https://ckeditor.com/docs/ckeditor5/latest/api/module_image_imageconfig-ImageInsertConfig.html#member-type
                            insert: {
                                type: 'block'
                            },
                            resizeOptions: [],
                            //resizeUnit: undefined,
                            // https://ckeditor.com/docs/ckeditor5/latest/api/module_image_imageconfig-ImageConfig.html#member-styles
                            styles: {
                                options: ['block']
                            },
                            // https://ckeditor.com/docs/ckeditor5/latest/api/module_image_imageconfig-ImageConfig.html#member-toolbar
                            toolbar: ['|'],
                            // https://ckeditor.com/docs/ckeditor5/latest/api/module_image_imageconfig-ImageUploadConfig.html#member-types
                            upload: {
                                types: ['png', 'jpeg']
                            }
                        },
                        // https://ckeditor.com/docs/ckeditor5/latest/api/module_media-embed_mediaembedconfig-MediaEmbedConfig.html
                        mediaEmbed: {
                            previewsInData: true,
                            removeProviders: ['facebook', 'flickr', 'googleMaps', 'instagram', 'twitter']
                        },
                        simpleUpload: {
                            // The URL that the images are uploaded to.
                            uploadUrl: '@Url.Action(MVC.Platform.UploadImageCKEditor())',
                            headers: {
                                'RequestVerificationToken': '@TokenHeaderValue()'
                            }
                        },
                        toolbar: {
                            shouldNotGroupWhenFull: true
                        }
                    })
                    .then(editor => {
                        editor.model.document.on('change:data', () => {
                            element.value = editor.getData();
                        });
                    })
                    .catch(error => {
                        console.error(error);
                    });
            });
        });

        // todo: Would be nice if this is a global method that can be re-used
        @functions{
            //https://learn.microsoft.com/en-us/aspnet/web-api/overview/security/preventing-cross-site-request-forgery-csrf-attacks#anti-csrf-and-ajax
            public string TokenHeaderValue()
            {
                string cookieToken, formToken;
                AntiForgery.GetTokens(null, out cookieToken, out formToken);
                return cookieToken + ":" + formToken;
            }
        }
    }
</script>