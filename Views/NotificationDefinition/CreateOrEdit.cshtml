@using nl.boxplosive.BackOffice.Mvc.Factories
@model nl.boxplosive.BackOffice.Mvc.Models.NotificationDefinition.NotificationDefinitionModel

@{
    string action = Model.IsNew ? MVC.NotificationDefinition.ActionNames.Create : MVC.NotificationDefinition.ActionNames.Edit;
    ViewBag.Title = string.Format("{0} {1}", action, NotificationDefinitionFactory.ItemPageTitle.ToLower());
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm(action, MVC.NotificationDefinition.Name))
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.Version)
    @Html.HiddenFor(model => model.Page)

    <div class="form-horizontal">
        <div id="LoyaltyEventDefinitionForm" class="well">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            @Html.EditorFor(model => model.Name, new { labelClass = "col-sm-3", textboxClass = "col-sm-5" })

            <div class="form-group">
                @Html.LabelFor(m => m.Type, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-5">
                    @Html.DropDownListFor(m => m.Type, true, Model.NotificationTypes, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Type, "", new { @class = "text-danger" })
                </div>
            </div>

            @Html.EditorFor(model => model.CustomEvent, new { labelClass = "col-sm-3", textboxClass = "col-sm-5" })

            @Html.EditorFor(r => r.Arguments, "MultilineText", new { labelClass = "col-sm-3", rows = 8 })
        </div>
        <div class="form-group">
            <div class="col-sm-12">
                <input type="submit" value="Save" class="btn btn-primary" />
                @Html.ActionLink("Cancel", MVC.NotificationDefinition.ActionNames.Index, MVC.NotificationDefinition.Name,
                    new { page = Model.Page }, new { @class = "btn btn-primary" })
            </div>
        </div>
    </div>
}