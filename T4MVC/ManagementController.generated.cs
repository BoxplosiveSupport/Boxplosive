// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace nl.boxplosive.BackOffice.Mvc.Controllers
{
    public partial class ManagementController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ManagementController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected ManagementController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Publications()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Publications);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult EdmBatches()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EdmBatches);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult EdmBatch()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EdmBatch);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ManagementController Actions { get { return MVC.Management; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Management";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Management";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string Publications = "Publications";
            public readonly string BackgroundProcesses = "BackgroundProcesses";
            public readonly string EdmBatches = "EdmBatches";
            public readonly string EdmBatch = "EdmBatch";
            public readonly string SignOutUser = "SignOutUser";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string Publications = "Publications";
            public const string BackgroundProcesses = "BackgroundProcesses";
            public const string EdmBatches = "EdmBatches";
            public const string EdmBatch = "EdmBatch";
            public const string SignOutUser = "SignOutUser";
        }


        static readonly ActionParamsClass_Publications s_params_Publications = new ActionParamsClass_Publications();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Publications PublicationsParams { get { return s_params_Publications; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Publications
        {
            public readonly string page = "page";
            public readonly string type = "type";
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_EdmBatches s_params_EdmBatches = new ActionParamsClass_EdmBatches();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_EdmBatches EdmBatchesParams { get { return s_params_EdmBatches; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_EdmBatches
        {
            public readonly string page = "page";
        }
        static readonly ActionParamsClass_EdmBatch s_params_EdmBatch = new ActionParamsClass_EdmBatch();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_EdmBatch EdmBatchParams { get { return s_params_EdmBatch; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_EdmBatch
        {
            public readonly string id = "id";
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_SignOutUser s_params_SignOutUser = new ActionParamsClass_SignOutUser();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SignOutUser SignOutUserParams { get { return s_params_SignOutUser; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SignOutUser
        {
            public readonly string actionResultOverride = "actionResultOverride";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string BackgroundProcesses = "BackgroundProcesses";
                public readonly string EdmBatch = "EdmBatch";
                public readonly string EdmBatches = "EdmBatches";
                public readonly string Index = "Index";
                public readonly string Publications = "Publications";
            }
            public readonly string BackgroundProcesses = "~/Views/Management/BackgroundProcesses.cshtml";
            public readonly string EdmBatch = "~/Views/Management/EdmBatch.cshtml";
            public readonly string EdmBatches = "~/Views/Management/EdmBatches.cshtml";
            public readonly string Index = "~/Views/Management/Index.cshtml";
            public readonly string Publications = "~/Views/Management/Publications.cshtml";
            static readonly _DisplayTemplatesClass s_DisplayTemplates = new _DisplayTemplatesClass();
            public _DisplayTemplatesClass DisplayTemplates { get { return s_DisplayTemplates; } }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public partial class _DisplayTemplatesClass
            {
                static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
                public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
                public class _ViewNamesClass
                {
                    public readonly string PaginationModel = "PaginationModel";
                    public readonly string PublicationsType = "PublicationsType";
                }
                public readonly string PaginationModel = "~/Views/Management/DisplayTemplates/PaginationModel.cshtml";
                public readonly string PublicationsType = "~/Views/Management/DisplayTemplates/PublicationsType.cshtml";
            }
            static readonly _EditorTemplatesClass s_EditorTemplates = new _EditorTemplatesClass();
            public _EditorTemplatesClass EditorTemplates { get { return s_EditorTemplates; } }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public partial class _EditorTemplatesClass
            {
                static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
                public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
                public class _ViewNamesClass
                {
                    public readonly string DatePicker = "DatePicker";
                    public readonly string EdmBatchCheckPromotionModel = "EdmBatchCheckPromotionModel";
                    public readonly string Enum = "Enum";
                    public readonly string PublicationFilterModel = "PublicationFilterModel";
                    public readonly string SearchQuery = "SearchQuery";
                }
                public readonly string DatePicker = "~/Views/Management/EditorTemplates/DatePicker.cshtml";
                public readonly string EdmBatchCheckPromotionModel = "~/Views/Management/EditorTemplates/EdmBatchCheckPromotionModel.cshtml";
                public readonly string Enum = "~/Views/Management/EditorTemplates/Enum.cshtml";
                public readonly string PublicationFilterModel = "~/Views/Management/EditorTemplates/PublicationFilterModel.cshtml";
                public readonly string SearchQuery = "~/Views/Management/EditorTemplates/SearchQuery.cshtml";
            }
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_ManagementController : nl.boxplosive.BackOffice.Mvc.Controllers.ManagementController
    {
        public T4MVC_ManagementController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void PublicationsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int? page, nl.boxplosive.BackOffice.Mvc.Models.Management.PublicationsType? type);

        [NonAction]
        public override System.Web.Mvc.ActionResult Publications(int? page, nl.boxplosive.BackOffice.Mvc.Models.Management.PublicationsType? type)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Publications);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "page", page);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "type", type);
            PublicationsOverride(callInfo, page, type);
            return callInfo;
        }

        [NonAction]
        partial void PublicationsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, nl.boxplosive.BackOffice.Mvc.Models.Management.PublicationsModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult Publications(nl.boxplosive.BackOffice.Mvc.Models.Management.PublicationsModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Publications);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            PublicationsOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void BackgroundProcessesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult BackgroundProcesses()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.BackgroundProcesses);
            BackgroundProcessesOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void EdmBatchesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int? page);

        [NonAction]
        public override System.Web.Mvc.ActionResult EdmBatches(int? page)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EdmBatches);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "page", page);
            EdmBatchesOverride(callInfo, page);
            return callInfo;
        }

        [NonAction]
        partial void EdmBatchOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult EdmBatch(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EdmBatch);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            EdmBatchOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void EdmBatchOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, nl.boxplosive.BackOffice.Mvc.Models.Management.EdmBatchDetailsModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult EdmBatch(nl.boxplosive.BackOffice.Mvc.Models.Management.EdmBatchDetailsModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EdmBatch);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            EdmBatchOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void SignOutUserOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Web.Mvc.ActionResult actionResultOverride);

        [NonAction]
        public override System.Web.Mvc.ActionResult SignOutUser(System.Web.Mvc.ActionResult actionResultOverride)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SignOutUser);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "actionResultOverride", actionResultOverride);
            SignOutUserOverride(callInfo, actionResultOverride);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
