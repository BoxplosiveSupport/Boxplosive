// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static partial class MVC
{
    static readonly AdminClass s_Admin = new AdminClass();
    public static AdminClass AdminArea { get { return s_Admin; } }
    public static nl.boxplosive.BackOffice.Mvc.Controllers.AccountController Account = new nl.boxplosive.BackOffice.Mvc.Controllers.T4MVC_AccountController();
    public static nl.boxplosive.BackOffice.Mvc.Controllers.AdminController Admin = new nl.boxplosive.BackOffice.Mvc.Controllers.T4MVC_AdminController();
    public static nl.boxplosive.BackOffice.Mvc.Controllers.AppCardStackDefinitionController AppCardStackDefinition = new nl.boxplosive.BackOffice.Mvc.Controllers.T4MVC_AppCardStackDefinitionController();
    public static nl.boxplosive.BackOffice.Mvc.Controllers.AppConfigItemGroupController AppConfigItemGroup = new nl.boxplosive.BackOffice.Mvc.Controllers.T4MVC_AppConfigItemGroupController();
    public static nl.boxplosive.BackOffice.Mvc.Controllers.CreateLoyaltyController CreateLoyalty = new nl.boxplosive.BackOffice.Mvc.Controllers.T4MVC_CreateLoyaltyController();
    public static nl.boxplosive.BackOffice.Mvc.Controllers.CreatePromotionController CreatePromotion = new nl.boxplosive.BackOffice.Mvc.Controllers.T4MVC_CreatePromotionController();
    public static nl.boxplosive.BackOffice.Mvc.ErrorController Error = new nl.boxplosive.BackOffice.Mvc.T4MVC_ErrorController();
    public static nl.boxplosive.BackOffice.Mvc.Controllers.HomeController Home = new nl.boxplosive.BackOffice.Mvc.Controllers.T4MVC_HomeController();
    public static nl.boxplosive.BackOffice.Mvc.Controllers.LanguageController Language = new nl.boxplosive.BackOffice.Mvc.Controllers.T4MVC_LanguageController();
    public static nl.boxplosive.BackOffice.Mvc.Controllers.LanguageDeliveryProviderController LanguageDeliveryProvider = new nl.boxplosive.BackOffice.Mvc.Controllers.T4MVC_LanguageDeliveryProviderController();
    public static nl.boxplosive.BackOffice.Mvc.Controllers.LanguageMessageGroupController LanguageMessageGroup = new nl.boxplosive.BackOffice.Mvc.Controllers.T4MVC_LanguageMessageGroupController();
    public static nl.boxplosive.BackOffice.Mvc.Controllers.LanguageMessageTemplateController LanguageMessageTemplate = new nl.boxplosive.BackOffice.Mvc.Controllers.T4MVC_LanguageMessageTemplateController();
    public static nl.boxplosive.BackOffice.Mvc.Controllers.LanguageNavController LanguageNav = new nl.boxplosive.BackOffice.Mvc.Controllers.T4MVC_LanguageNavController();
    public static nl.boxplosive.BackOffice.Mvc.Controllers.LoyaltyEventDefinitionController LoyaltyEventDefinition = new nl.boxplosive.BackOffice.Mvc.Controllers.T4MVC_LoyaltyEventDefinitionController();
    public static nl.boxplosive.BackOffice.Mvc.Controllers.LoyaltyProgramController LoyaltyProgram = new nl.boxplosive.BackOffice.Mvc.Controllers.T4MVC_LoyaltyProgramController();
    public static nl.boxplosive.BackOffice.Mvc.Controllers.LoyaltyRewardReminderController LoyaltyRewardReminder = new nl.boxplosive.BackOffice.Mvc.Controllers.T4MVC_LoyaltyRewardReminderController();
    public static nl.boxplosive.BackOffice.Mvc.Controllers.ManagementController Management = new nl.boxplosive.BackOffice.Mvc.Controllers.T4MVC_ManagementController();
    public static nl.boxplosive.BackOffice.Mvc.Controllers.ManageNewsArticleController ManageNewsArticle = new nl.boxplosive.BackOffice.Mvc.Controllers.T4MVC_ManageNewsArticleController();
    public static nl.boxplosive.BackOffice.Mvc.Controllers.ManageProductsController ManageProducts = new nl.boxplosive.BackOffice.Mvc.Controllers.T4MVC_ManageProductsController();
    public static nl.boxplosive.BackOffice.Mvc.Controllers.ManageRetailerStoresController ManageRetailerStores = new nl.boxplosive.BackOffice.Mvc.Controllers.T4MVC_ManageRetailerStoresController();
    public static nl.boxplosive.BackOffice.Mvc.Controllers.ManageVersionMessageController ManageVersionMessage = new nl.boxplosive.BackOffice.Mvc.Controllers.T4MVC_ManageVersionMessageController();
    public static nl.boxplosive.BackOffice.Mvc.Controllers.ModifyLoyaltyController ModifyLoyalty = new nl.boxplosive.BackOffice.Mvc.Controllers.T4MVC_ModifyLoyaltyController();
    public static nl.boxplosive.BackOffice.Mvc.Controllers.ModifyPromotionController ModifyPromotion = new nl.boxplosive.BackOffice.Mvc.Controllers.T4MVC_ModifyPromotionController();
    public static nl.boxplosive.BackOffice.Mvc.Controllers.NotificationDefinitionController NotificationDefinition = new nl.boxplosive.BackOffice.Mvc.Controllers.T4MVC_NotificationDefinitionController();
    public static nl.boxplosive.BackOffice.Mvc.Controllers.PlatformController Platform = new nl.boxplosive.BackOffice.Mvc.Controllers.T4MVC_PlatformController();
    public static nl.boxplosive.BackOffice.Mvc.Controllers.PublishLoyaltyController PublishLoyalty = new nl.boxplosive.BackOffice.Mvc.Controllers.T4MVC_PublishLoyaltyController();
    public static nl.boxplosive.BackOffice.Mvc.Controllers.PublishPromotionController PublishPromotion = new nl.boxplosive.BackOffice.Mvc.Controllers.T4MVC_PublishPromotionController();
    public static nl.boxplosive.BackOffice.Mvc.Controllers.ReclamationController Reclamation = new nl.boxplosive.BackOffice.Mvc.Controllers.T4MVC_ReclamationController();
    public static nl.boxplosive.BackOffice.Mvc.Controllers.SegmentationController Segmentation = new nl.boxplosive.BackOffice.Mvc.Controllers.T4MVC_SegmentationController();
    public static nl.boxplosive.BackOffice.Mvc.Controllers.StyleguideController Styleguide = new nl.boxplosive.BackOffice.Mvc.Controllers.T4MVC_StyleguideController();
    public static nl.boxplosive.BackOffice.Mvc.Controllers.WebhookEventController WebhookEvent = new nl.boxplosive.BackOffice.Mvc.Controllers.T4MVC_WebhookEventController();
    public static T4MVC.CampaignControllerBaseController CampaignControllerBase = new T4MVC.CampaignControllerBaseController();
    public static T4MVC.DraftBaseController DraftBase = new T4MVC.DraftBaseController();
    public static T4MVC.DraftControllerBaseController DraftControllerBase = new T4MVC.DraftControllerBaseController();
    public static T4MVC.LoyaltyController Loyalty = new T4MVC.LoyaltyController();
    public static T4MVC.LoyaltyControllerBaseController LoyaltyControllerBase = new T4MVC.LoyaltyControllerBaseController();
    public static T4MVC.LoyaltyEventController LoyaltyEvent = new T4MVC.LoyaltyEventController();
    public static T4MVC.PromotionControllerBaseController PromotionControllerBase = new T4MVC.PromotionControllerBaseController();
    public static T4MVC.SharedController Shared = new T4MVC.SharedController();
    public static T4MVC.ValidationController Validation = new T4MVC.ValidationController();
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class AdminClass
    {
        public readonly string Name = "Admin";
        public nl.boxplosive.BackOffice.Mvc.Areas.Admin.Controllers.AppConfigItemController AppConfigItem = new nl.boxplosive.BackOffice.Mvc.Areas.Admin.Controllers.T4MVC_AppConfigItemController();
        public nl.boxplosive.BackOffice.Mvc.Areas.Admin.Controllers.IssuerController Issuer = new nl.boxplosive.BackOffice.Mvc.Areas.Admin.Controllers.T4MVC_IssuerController();
        public nl.boxplosive.BackOffice.Mvc.Areas.Admin.Controllers.PlaceholderController Placeholder = new nl.boxplosive.BackOffice.Mvc.Areas.Admin.Controllers.T4MVC_PlaceholderController();
        public nl.boxplosive.BackOffice.Mvc.Areas.Admin.Controllers.TemplateController Template = new nl.boxplosive.BackOffice.Mvc.Areas.Admin.Controllers.T4MVC_TemplateController();
        public T4MVC.Admin.SharedController Shared = new T4MVC.Admin.SharedController();
    }
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class Dummy
    {
        private Dummy() { }
        public static Dummy Instance = new Dummy();
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ActionResult : System.Web.Mvc.ActionResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ActionResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
     
    public override void ExecuteResult(System.Web.Mvc.ControllerContext context) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_JsonResult : System.Web.Mvc.JsonResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_JsonResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_FileContentResult : System.Web.Mvc.FileContentResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_FileContentResult(string area, string controller, string action, string protocol = null): base(new byte[0], " ")
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_PartialViewResult : System.Web.Mvc.PartialViewResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_PartialViewResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ViewResult : System.Web.Mvc.ViewResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ViewResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_FileResult : System.Web.Mvc.FileResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_FileResult(string area, string controller, string action, string protocol = null): base(" ")
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
     
    protected override void WriteFile(System.Web.HttpResponseBase response) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}



namespace Links
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Scripts {
        private const string URLPATH = "~/Scripts";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        public static readonly string _references_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/_references.min.js") ? Url("_references.min.js") : Url("_references.js");
        public static readonly string additional_methods_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/additional-methods.min.js") ? Url("additional-methods.min.js") : Url("additional-methods.js");
        public static readonly string additional_methods_min_js = Url("additional-methods.min.js");
        public static readonly string additional_methods_min_js_map = Url("additional-methods.min.js.map");
        public static readonly string bootstrap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.js") ? Url("bootstrap.min.js") : Url("bootstrap.js");
        public static readonly string bootstrap_min_js = Url("bootstrap.min.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class boxplosive {
            private const string URLPATH = "~/Scripts/boxplosive";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string boxAutocomplete_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/boxAutocomplete.min.js") ? Url("boxAutocomplete.min.js") : Url("boxAutocomplete.js");
            public static readonly string boxplosive_product_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/boxplosive-product.min.js") ? Url("boxplosive-product.min.js") : Url("boxplosive-product.js");
            public static readonly string Boxplosive_Partial_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Boxplosive.Partial.min.js") ? Url("Boxplosive.Partial.min.js") : Url("Boxplosive.Partial.js");
            public static readonly string Boxplosive_Partialstep_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Boxplosive.Partialstep.min.js") ? Url("Boxplosive.Partialstep.min.js") : Url("Boxplosive.Partialstep.js");
            public static readonly string Boxplosive_PartialstepsManager_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Boxplosive.PartialstepsManager.min.js") ? Url("Boxplosive.PartialstepsManager.min.js") : Url("Boxplosive.PartialstepsManager.js");
            public static readonly string Boxplosive_PublishModule_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Boxplosive.PublishModule.min.js") ? Url("Boxplosive.PublishModule.min.js") : Url("Boxplosive.PublishModule.js");
            public static readonly string Boxplosive_Repeatable_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Boxplosive.Repeatable.min.js") ? Url("Boxplosive.Repeatable.min.js") : Url("Boxplosive.Repeatable.js");
            public static readonly string Boxplosive_Upload_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Boxplosive.Upload.min.js") ? Url("Boxplosive.Upload.min.js") : Url("Boxplosive.Upload.js");
            public static readonly string boxSpinner_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/boxSpinner.min.js") ? Url("boxSpinner.min.js") : Url("boxSpinner.js");
            public static readonly string custom_jquery_validation_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/custom-jquery-validation.min.js") ? Url("custom-jquery-validation.min.js") : Url("custom-jquery-validation.js");
            public static readonly string equalHeights_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/equalHeights.min.js") ? Url("equalHeights.min.js") : Url("equalHeights.js");
            public static readonly string init_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/init.min.js") ? Url("init.min.js") : Url("init.js");
            public static readonly string initCharts_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/initCharts.min.js") ? Url("initCharts.min.js") : Url("initCharts.js");
            public static readonly string modal_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/modal.min.js") ? Url("modal.min.js") : Url("modal.js");
            public static readonly string tab_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tab.min.js") ? Url("tab.min.js") : Url("tab.js");
        }
    
        public static readonly string boxplosive_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/boxplosive.min.js") ? Url("boxplosive.min.js") : Url("boxplosive.js");
        public static readonly string boxplosive_js_map = Url("boxplosive.js.map");
        public static readonly string jquery_3_7_1_vsdoc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-3.7.1-vsdoc.min.js") ? Url("jquery-3.7.1-vsdoc.min.js") : Url("jquery-3.7.1-vsdoc.js");
        public static readonly string jquery_3_7_1_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-3.7.1.min.js") ? Url("jquery-3.7.1.min.js") : Url("jquery-3.7.1.js");
        public static readonly string jquery_3_7_1_min_js = Url("jquery-3.7.1.min.js");
        public static readonly string jquery_3_7_1_min_map = Url("jquery-3.7.1.min.map");
        public static readonly string jquery_3_7_1_slim_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-3.7.1.slim.min.js") ? Url("jquery-3.7.1.slim.min.js") : Url("jquery-3.7.1.slim.js");
        public static readonly string jquery_3_7_1_slim_min_js = Url("jquery-3.7.1.slim.min.js");
        public static readonly string jquery_3_7_1_slim_min_map = Url("jquery-3.7.1.slim.min.map");
        public static readonly string jquery_ui_1_13_2_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-ui-1.13.2.min.js") ? Url("jquery-ui-1.13.2.min.js") : Url("jquery-ui-1.13.2.js");
        public static readonly string jquery_ui_1_13_2_min_js = Url("jquery-ui-1.13.2.min.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class jQuery_FileUpload {
            private const string URLPATH = "~/Scripts/jQuery.FileUpload";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class cors {
                private const string URLPATH = "~/Scripts/jQuery.FileUpload/cors";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string jquery_postmessage_transport_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.postmessage-transport.min.js") ? Url("jquery.postmessage-transport.min.js") : Url("jquery.postmessage-transport.js");
                public static readonly string jquery_xdr_transport_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.xdr-transport.min.js") ? Url("jquery.xdr-transport.min.js") : Url("jquery.xdr-transport.js");
            }
        
            public static readonly string jquery_fileupload_audio_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fileupload-audio.min.js") ? Url("jquery.fileupload-audio.min.js") : Url("jquery.fileupload-audio.js");
            public static readonly string jquery_fileupload_image_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fileupload-image.min.js") ? Url("jquery.fileupload-image.min.js") : Url("jquery.fileupload-image.js");
            public static readonly string jquery_fileupload_process_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fileupload-process.min.js") ? Url("jquery.fileupload-process.min.js") : Url("jquery.fileupload-process.js");
            public static readonly string jquery_fileupload_ui_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fileupload-ui.min.js") ? Url("jquery.fileupload-ui.min.js") : Url("jquery.fileupload-ui.js");
            public static readonly string jquery_fileupload_validate_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fileupload-validate.min.js") ? Url("jquery.fileupload-validate.min.js") : Url("jquery.fileupload-validate.js");
            public static readonly string jquery_fileupload_video_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fileupload-video.min.js") ? Url("jquery.fileupload-video.min.js") : Url("jquery.fileupload-video.js");
            public static readonly string jquery_fileupload_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fileupload.min.js") ? Url("jquery.fileupload.min.js") : Url("jquery.fileupload.js");
            public static readonly string jquery_iframe_transport_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.iframe-transport.min.js") ? Url("jquery.iframe-transport.min.js") : Url("jquery.iframe-transport.js");
        }
    
        public static readonly string jquery_timepicker_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.timepicker.min.js") ? Url("jquery.timepicker.min.js") : Url("jquery.timepicker.js");
        public static readonly string jquery_timepicker_min_js = Url("jquery.timepicker.min.js");
        public static readonly string jquery_validate_vsdoc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate-vsdoc.min.js") ? Url("jquery.validate-vsdoc.min.js") : Url("jquery.validate-vsdoc.js");
        public static readonly string jquery_validate_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.min.js") ? Url("jquery.validate.min.js") : Url("jquery.validate.js");
        public static readonly string jquery_validate_min_js = Url("jquery.validate.min.js");
        public static readonly string jquery_validate_min_js_map = Url("jquery.validate.min.js.map");
        public static readonly string modernizr_2_8_3_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/modernizr-2.8.3.min.js") ? Url("modernizr-2.8.3.min.js") : Url("modernizr-2.8.3.js");
        public static readonly string mustache_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/mustache.min.js") ? Url("mustache.min.js") : Url("mustache.js");
        public static readonly string mvcfoolproof_unobtrusive_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/mvcfoolproof.unobtrusive.min.js") ? Url("mvcfoolproof.unobtrusive.min.js") : Url("mvcfoolproof.unobtrusive.js");
        public static readonly string mvcfoolproof_unobtrusive_min_js = Url("mvcfoolproof.unobtrusive.min.js");
        public static readonly string MvcFoolproofJQueryValidation_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/MvcFoolproofJQueryValidation.min.js") ? Url("MvcFoolproofJQueryValidation.min.js") : Url("MvcFoolproofJQueryValidation.js");
        public static readonly string MvcFoolproofJQueryValidation_min_js = Url("MvcFoolproofJQueryValidation.min.js");
        public static readonly string MvcFoolproofValidation_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/MvcFoolproofValidation.min.js") ? Url("MvcFoolproofValidation.min.js") : Url("MvcFoolproofValidation.js");
        public static readonly string MvcFoolproofValidation_min_js = Url("MvcFoolproofValidation.min.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class plugins {
            private const string URLPATH = "~/Scripts/plugins";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string load_image_all_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/load-image.all.min.js") ? Url("load-image.all.min.js") : Url("load-image.all.js");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class polyfills {
            private const string URLPATH = "~/Scripts/polyfills";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string es5_sham_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/es5-sham.min.js") ? Url("es5-sham.min.js") : Url("es5-sham.js");
            public static readonly string es5_shim_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/es5-shim.min.js") ? Url("es5-shim.min.js") : Url("es5-shim.js");
            public static readonly string excanvas_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/excanvas.min.js") ? Url("excanvas.min.js") : Url("excanvas.js");
        }
    
        public static readonly string respond_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/respond.min.js") ? Url("respond.min.js") : Url("respond.js");
        public static readonly string respond_matchmedia_addListener_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/respond.matchmedia.addListener.min.js") ? Url("respond.matchmedia.addListener.min.js") : Url("respond.matchmedia.addListener.js");
        public static readonly string respond_matchmedia_addListener_min_js = Url("respond.matchmedia.addListener.min.js");
        public static readonly string respond_min_js = Url("respond.min.js");
        public static readonly string timepicker_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/timepicker.min.js") ? Url("timepicker.min.js") : Url("timepicker.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class typings {
            private const string URLPATH = "~/Scripts/typings";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class bootstrap {
                private const string URLPATH = "~/Scripts/typings/bootstrap";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string index_d_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/index.d.min.js") ? Url("index.d.min.js") : Url("index.d.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class boxplosive {
                private const string URLPATH = "~/Scripts/typings/boxplosive";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string boxplosive_d_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/boxplosive.d.min.js") ? Url("boxplosive.d.min.js") : Url("boxplosive.d.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class jquery {
                private const string URLPATH = "~/Scripts/typings/jquery";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string jquery_d_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.d.min.js") ? Url("jquery.d.min.js") : Url("jquery.d.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class jquery_fileupload {
                private const string URLPATH = "~/Scripts/typings/jquery.fileupload";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string jquery_fileupload_d_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fileupload.d.min.js") ? Url("jquery.fileupload.d.min.js") : Url("jquery.fileupload.d.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class jquery_validation {
                private const string URLPATH = "~/Scripts/typings/jquery.validation";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string jquery_validation_d_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validation.d.min.js") ? Url("jquery.validation.d.min.js") : Url("jquery.validation.d.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class jqueryui {
                private const string URLPATH = "~/Scripts/typings/jqueryui";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string jqueryui_d_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jqueryui.d.min.js") ? Url("jqueryui.d.min.js") : Url("jqueryui.d.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class modernizr {
                private const string URLPATH = "~/Scripts/typings/modernizr";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string modernizr_d_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/modernizr.d.min.js") ? Url("modernizr.d.min.js") : Url("modernizr.d.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class mustache {
                private const string URLPATH = "~/Scripts/typings/mustache";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string mustache_d_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/mustache.d.min.js") ? Url("mustache.d.min.js") : Url("mustache.d.js");
            }
        
        }
    
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Content {
        private const string URLPATH = "~/Content";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        public static readonly string _bootstrap_compass_scss = Url("_bootstrap-compass.scss");
        public static readonly string _bootstrap_mincer_scss = Url("_bootstrap-mincer.scss");
        public static readonly string _bootstrap_sprockets_scss = Url("_bootstrap-sprockets.scss");
        public static readonly string _bootstrap_scss = Url("_bootstrap.scss");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class bootstrap {
            private const string URLPATH = "~/Content/bootstrap";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string _alerts_scss = Url("_alerts.scss");
            public static readonly string _badges_scss = Url("_badges.scss");
            public static readonly string _breadcrumbs_scss = Url("_breadcrumbs.scss");
            public static readonly string _button_groups_scss = Url("_button-groups.scss");
            public static readonly string _buttons_scss = Url("_buttons.scss");
            public static readonly string _carousel_scss = Url("_carousel.scss");
            public static readonly string _close_scss = Url("_close.scss");
            public static readonly string _code_scss = Url("_code.scss");
            public static readonly string _component_animations_scss = Url("_component-animations.scss");
            public static readonly string _dropdowns_scss = Url("_dropdowns.scss");
            public static readonly string _forms_scss = Url("_forms.scss");
            public static readonly string _glyphicons_scss = Url("_glyphicons.scss");
            public static readonly string _grid_scss = Url("_grid.scss");
            public static readonly string _input_groups_scss = Url("_input-groups.scss");
            public static readonly string _jumbotron_scss = Url("_jumbotron.scss");
            public static readonly string _labels_scss = Url("_labels.scss");
            public static readonly string _list_group_scss = Url("_list-group.scss");
            public static readonly string _media_scss = Url("_media.scss");
            public static readonly string _mixins_scss = Url("_mixins.scss");
            public static readonly string _modals_scss = Url("_modals.scss");
            public static readonly string _navbar_scss = Url("_navbar.scss");
            public static readonly string _navs_scss = Url("_navs.scss");
            public static readonly string _normalize_scss = Url("_normalize.scss");
            public static readonly string _pager_scss = Url("_pager.scss");
            public static readonly string _pagination_scss = Url("_pagination.scss");
            public static readonly string _panels_scss = Url("_panels.scss");
            public static readonly string _popovers_scss = Url("_popovers.scss");
            public static readonly string _print_scss = Url("_print.scss");
            public static readonly string _progress_bars_scss = Url("_progress-bars.scss");
            public static readonly string _responsive_embed_scss = Url("_responsive-embed.scss");
            public static readonly string _responsive_utilities_scss = Url("_responsive-utilities.scss");
            public static readonly string _scaffolding_scss = Url("_scaffolding.scss");
            public static readonly string _tables_scss = Url("_tables.scss");
            public static readonly string _theme_scss = Url("_theme.scss");
            public static readonly string _thumbnails_scss = Url("_thumbnails.scss");
            public static readonly string _tooltip_scss = Url("_tooltip.scss");
            public static readonly string _type_scss = Url("_type.scss");
            public static readonly string _utilities_scss = Url("_utilities.scss");
            public static readonly string _variables_scss = Url("_variables.scss");
            public static readonly string _variables_original_scss = Url("_variables_original.scss");
            public static readonly string _wells_scss = Url("_wells.scss");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class mixins {
                private const string URLPATH = "~/Content/bootstrap/mixins";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string _alerts_scss = Url("_alerts.scss");
                public static readonly string _background_variant_scss = Url("_background-variant.scss");
                public static readonly string _border_radius_scss = Url("_border-radius.scss");
                public static readonly string _buttons_scss = Url("_buttons.scss");
                public static readonly string _center_block_scss = Url("_center-block.scss");
                public static readonly string _clearfix_scss = Url("_clearfix.scss");
                public static readonly string _forms_scss = Url("_forms.scss");
                public static readonly string _gradients_scss = Url("_gradients.scss");
                public static readonly string _grid_framework_scss = Url("_grid-framework.scss");
                public static readonly string _grid_scss = Url("_grid.scss");
                public static readonly string _hide_text_scss = Url("_hide-text.scss");
                public static readonly string _image_scss = Url("_image.scss");
                public static readonly string _labels_scss = Url("_labels.scss");
                public static readonly string _list_group_scss = Url("_list-group.scss");
                public static readonly string _nav_divider_scss = Url("_nav-divider.scss");
                public static readonly string _nav_vertical_align_scss = Url("_nav-vertical-align.scss");
                public static readonly string _opacity_scss = Url("_opacity.scss");
                public static readonly string _pagination_scss = Url("_pagination.scss");
                public static readonly string _panels_scss = Url("_panels.scss");
                public static readonly string _progress_bar_scss = Url("_progress-bar.scss");
                public static readonly string _reset_filter_scss = Url("_reset-filter.scss");
                public static readonly string _reset_text_scss = Url("_reset-text.scss");
                public static readonly string _resize_scss = Url("_resize.scss");
                public static readonly string _responsive_visibility_scss = Url("_responsive-visibility.scss");
                public static readonly string _size_scss = Url("_size.scss");
                public static readonly string _tab_focus_scss = Url("_tab-focus.scss");
                public static readonly string _table_row_scss = Url("_table-row.scss");
                public static readonly string _text_emphasis_scss = Url("_text-emphasis.scss");
                public static readonly string _text_overflow_scss = Url("_text-overflow.scss");
                public static readonly string _vendor_prefixes_scss = Url("_vendor-prefixes.scss");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class jQuery_FileUpload {
            private const string URLPATH = "~/Content/jQuery.FileUpload";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class css {
                private const string URLPATH = "~/Content/jQuery.FileUpload/css";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string jquery_fileupload_noscript_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fileupload-noscript.min.css") ? Url("jquery.fileupload-noscript.min.css") : Url("jquery.fileupload-noscript.css");
                     
                public static readonly string jquery_fileupload_ui_noscript_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fileupload-ui-noscript.min.css") ? Url("jquery.fileupload-ui-noscript.min.css") : Url("jquery.fileupload-ui-noscript.css");
                     
                public static readonly string jquery_fileupload_ui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fileupload-ui.min.css") ? Url("jquery.fileupload-ui.min.css") : Url("jquery.fileupload-ui.css");
                     
                public static readonly string jquery_fileupload_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fileupload.min.css") ? Url("jquery.fileupload.min.css") : Url("jquery.fileupload.css");
                     
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class img {
                private const string URLPATH = "~/Content/jQuery.FileUpload/img";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string loading_gif = Url("loading.gif");
                public static readonly string progressbar_gif = Url("progressbar.gif");
            }
        
        }
    
        public static readonly string jquery_timepicker_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.timepicker.min.css") ? Url("jquery.timepicker.min.css") : Url("jquery.timepicker.css");
             
        public static readonly string jquery_timepicker_min_css = Url("jquery.timepicker.min.css");
        public static readonly string PagedList_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/PagedList.min.css") ? Url("PagedList.min.css") : Url("PagedList.css");
             
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Promotion {
            private const string URLPATH = "~/Content/Promotion";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class themes {
            private const string URLPATH = "~/Content/themes";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class @base {
                private const string URLPATH = "~/Content/themes/base";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string accordion_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/accordion.min.css") ? Url("accordion.min.css") : Url("accordion.css");
                     
                public static readonly string all_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/all.min.css") ? Url("all.min.css") : Url("all.css");
                     
                public static readonly string autocomplete_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/autocomplete.min.css") ? Url("autocomplete.min.css") : Url("autocomplete.css");
                     
                public static readonly string base_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/base.min.css") ? Url("base.min.css") : Url("base.css");
                     
                public static readonly string button_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/button.min.css") ? Url("button.min.css") : Url("button.css");
                     
                public static readonly string core_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/core.min.css") ? Url("core.min.css") : Url("core.css");
                     
                public static readonly string datepicker_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datepicker.min.css") ? Url("datepicker.min.css") : Url("datepicker.css");
                     
                public static readonly string dialog_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog.min.css") ? Url("dialog.min.css") : Url("dialog.css");
                     
                public static readonly string draggable_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/draggable.min.css") ? Url("draggable.min.css") : Url("draggable.css");
                     
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class images {
                    private const string URLPATH = "~/Content/themes/base/images";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string ui_bg_flat_0_aaaaaa_40x100_png = Url("ui-bg_flat_0_aaaaaa_40x100.png");
                    public static readonly string ui_bg_flat_75_ffffff_40x100_png = Url("ui-bg_flat_75_ffffff_40x100.png");
                    public static readonly string ui_bg_glass_55_fbf9ee_1x400_png = Url("ui-bg_glass_55_fbf9ee_1x400.png");
                    public static readonly string ui_bg_glass_65_ffffff_1x400_png = Url("ui-bg_glass_65_ffffff_1x400.png");
                    public static readonly string ui_bg_glass_75_dadada_1x400_png = Url("ui-bg_glass_75_dadada_1x400.png");
                    public static readonly string ui_bg_glass_75_e6e6e6_1x400_png = Url("ui-bg_glass_75_e6e6e6_1x400.png");
                    public static readonly string ui_bg_glass_95_fef1ec_1x400_png = Url("ui-bg_glass_95_fef1ec_1x400.png");
                    public static readonly string ui_bg_highlight_soft_75_cccccc_1x100_png = Url("ui-bg_highlight-soft_75_cccccc_1x100.png");
                    public static readonly string ui_icons_222222_256x240_png = Url("ui-icons_222222_256x240.png");
                    public static readonly string ui_icons_2e83ff_256x240_png = Url("ui-icons_2e83ff_256x240.png");
                    public static readonly string ui_icons_444444_256x240_png = Url("ui-icons_444444_256x240.png");
                    public static readonly string ui_icons_454545_256x240_png = Url("ui-icons_454545_256x240.png");
                    public static readonly string ui_icons_555555_256x240_png = Url("ui-icons_555555_256x240.png");
                    public static readonly string ui_icons_777620_256x240_png = Url("ui-icons_777620_256x240.png");
                    public static readonly string ui_icons_777777_256x240_png = Url("ui-icons_777777_256x240.png");
                    public static readonly string ui_icons_888888_256x240_png = Url("ui-icons_888888_256x240.png");
                    public static readonly string ui_icons_cc0000_256x240_png = Url("ui-icons_cc0000_256x240.png");
                    public static readonly string ui_icons_cd0a0a_256x240_png = Url("ui-icons_cd0a0a_256x240.png");
                    public static readonly string ui_icons_ffffff_256x240_png = Url("ui-icons_ffffff_256x240.png");
                }
            
                public static readonly string jquery_ui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-ui.min.css") ? Url("jquery-ui.min.css") : Url("jquery-ui.css");
                     
                public static readonly string jquery_ui_min_css = Url("jquery-ui.min.css");
                public static readonly string menu_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/menu.min.css") ? Url("menu.min.css") : Url("menu.css");
                     
                public static readonly string progressbar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/progressbar.min.css") ? Url("progressbar.min.css") : Url("progressbar.css");
                     
                public static readonly string resizable_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/resizable.min.css") ? Url("resizable.min.css") : Url("resizable.css");
                     
                public static readonly string selectable_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/selectable.min.css") ? Url("selectable.min.css") : Url("selectable.css");
                     
                public static readonly string selectmenu_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/selectmenu.min.css") ? Url("selectmenu.min.css") : Url("selectmenu.css");
                     
                public static readonly string slider_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/slider.min.css") ? Url("slider.min.css") : Url("slider.css");
                     
                public static readonly string sortable_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sortable.min.css") ? Url("sortable.min.css") : Url("sortable.css");
                     
                public static readonly string spinner_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/spinner.min.css") ? Url("spinner.min.css") : Url("spinner.css");
                     
                public static readonly string tabs_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tabs.min.css") ? Url("tabs.min.css") : Url("tabs.css");
                     
                public static readonly string theme_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/theme.min.css") ? Url("theme.min.css") : Url("theme.css");
                     
                public static readonly string tooltip_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tooltip.min.css") ? Url("tooltip.min.css") : Url("tooltip.css");
                     
            }
        
        }
    
    }

    
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static partial class Bundles
    {
        public static partial class Scripts 
        {
            public static partial class boxplosive 
            {
                public static class Assets
                {
                    public const string boxAutocomplete_js = "~/Scripts/boxplosive/boxAutocomplete.js"; 
                    public const string boxplosive_product_js = "~/Scripts/boxplosive/boxplosive-product.js"; 
                    public const string boxSpinner_js = "~/Scripts/boxplosive/boxSpinner.js"; 
                    public const string custom_jquery_validation_js = "~/Scripts/boxplosive/custom-jquery-validation.js"; 
                    public const string equalHeights_js = "~/Scripts/boxplosive/equalHeights.js"; 
                    public const string init_js = "~/Scripts/boxplosive/init.js"; 
                    public const string initCharts_js = "~/Scripts/boxplosive/initCharts.js"; 
                    public const string modal_js = "~/Scripts/boxplosive/modal.js"; 
                    public const string tab_js = "~/Scripts/boxplosive/tab.js"; 
                }
            }
            public static partial class jQuery_FileUpload 
            {
                public static partial class cors 
                {
                    public static class Assets
                    {
                        public const string jquery_postmessage_transport_js = "~/Scripts/jQuery.FileUpload/cors/jquery.postmessage-transport.js"; 
                        public const string jquery_xdr_transport_js = "~/Scripts/jQuery.FileUpload/cors/jquery.xdr-transport.js"; 
                    }
                }
                public static class Assets
                {
                    public const string jquery_fileupload_audio_js = "~/Scripts/jQuery.FileUpload/jquery.fileupload-audio.js"; 
                    public const string jquery_fileupload_image_js = "~/Scripts/jQuery.FileUpload/jquery.fileupload-image.js"; 
                    public const string jquery_fileupload_process_js = "~/Scripts/jQuery.FileUpload/jquery.fileupload-process.js"; 
                    public const string jquery_fileupload_ui_js = "~/Scripts/jQuery.FileUpload/jquery.fileupload-ui.js"; 
                    public const string jquery_fileupload_validate_js = "~/Scripts/jQuery.FileUpload/jquery.fileupload-validate.js"; 
                    public const string jquery_fileupload_video_js = "~/Scripts/jQuery.FileUpload/jquery.fileupload-video.js"; 
                    public const string jquery_fileupload_js = "~/Scripts/jQuery.FileUpload/jquery.fileupload.js"; 
                    public const string jquery_iframe_transport_js = "~/Scripts/jQuery.FileUpload/jquery.iframe-transport.js"; 
                }
            }
            public static partial class plugins 
            {
                public static class Assets
                {
                    public const string load_image_all_js = "~/Scripts/plugins/load-image.all.js"; 
                }
            }
            public static partial class polyfills 
            {
                public static class Assets
                {
                    public const string es5_sham_js = "~/Scripts/polyfills/es5-sham.js"; 
                    public const string es5_shim_js = "~/Scripts/polyfills/es5-shim.js"; 
                    public const string excanvas_js = "~/Scripts/polyfills/excanvas.js"; 
                }
            }
            public static partial class typings 
            {
                public static partial class bootstrap 
                {
                    public static class Assets
                    {
                    }
                }
                public static partial class boxplosive 
                {
                    public static class Assets
                    {
                    }
                }
                public static partial class jquery 
                {
                    public static class Assets
                    {
                    }
                }
                public static partial class jquery_fileupload 
                {
                    public static class Assets
                    {
                    }
                }
                public static partial class jquery_validation 
                {
                    public static class Assets
                    {
                    }
                }
                public static partial class jqueryui 
                {
                    public static class Assets
                    {
                    }
                }
                public static partial class modernizr 
                {
                    public static class Assets
                    {
                    }
                }
                public static partial class mustache 
                {
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                }
            }
            public static class Assets
            {
                public const string _references_js = "~/Scripts/_references.js"; 
                public const string additional_methods_js = "~/Scripts/additional-methods.js"; 
                public const string additional_methods_min_js = "~/Scripts/additional-methods.min.js"; 
                public const string bootstrap_js = "~/Scripts/bootstrap.js"; 
                public const string bootstrap_min_js = "~/Scripts/bootstrap.min.js"; 
                public const string boxplosive_js = "~/Scripts/boxplosive.js"; 
                public const string jquery_3_7_1_js = "~/Scripts/jquery-3.7.1.js"; 
                public const string jquery_3_7_1_min_js = "~/Scripts/jquery-3.7.1.min.js"; 
                public const string jquery_3_7_1_slim_js = "~/Scripts/jquery-3.7.1.slim.js"; 
                public const string jquery_3_7_1_slim_min_js = "~/Scripts/jquery-3.7.1.slim.min.js"; 
                public const string jquery_ui_1_13_2_js = "~/Scripts/jquery-ui-1.13.2.js"; 
                public const string jquery_ui_1_13_2_min_js = "~/Scripts/jquery-ui-1.13.2.min.js"; 
                public const string jquery_timepicker_js = "~/Scripts/jquery.timepicker.js"; 
                public const string jquery_timepicker_min_js = "~/Scripts/jquery.timepicker.min.js"; 
                public const string jquery_validate_js = "~/Scripts/jquery.validate.js"; 
                public const string jquery_validate_min_js = "~/Scripts/jquery.validate.min.js"; 
                public const string modernizr_2_8_3_js = "~/Scripts/modernizr-2.8.3.js"; 
                public const string mustache_js = "~/Scripts/mustache.js"; 
                public const string mvcfoolproof_unobtrusive_js = "~/Scripts/mvcfoolproof.unobtrusive.js"; 
                public const string mvcfoolproof_unobtrusive_min_js = "~/Scripts/mvcfoolproof.unobtrusive.min.js"; 
                public const string MvcFoolproofJQueryValidation_js = "~/Scripts/MvcFoolproofJQueryValidation.js"; 
                public const string MvcFoolproofJQueryValidation_min_js = "~/Scripts/MvcFoolproofJQueryValidation.min.js"; 
                public const string MvcFoolproofValidation_js = "~/Scripts/MvcFoolproofValidation.js"; 
                public const string MvcFoolproofValidation_min_js = "~/Scripts/MvcFoolproofValidation.min.js"; 
                public const string respond_js = "~/Scripts/respond.js"; 
                public const string respond_matchmedia_addListener_js = "~/Scripts/respond.matchmedia.addListener.js"; 
                public const string respond_matchmedia_addListener_min_js = "~/Scripts/respond.matchmedia.addListener.min.js"; 
                public const string respond_min_js = "~/Scripts/respond.min.js"; 
                public const string timepicker_js = "~/Scripts/timepicker.js"; 
            }
        }
        public static partial class Content 
        {
            public static partial class bootstrap 
            {
                public static partial class mixins 
                {
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                }
            }
            public static partial class jQuery_FileUpload 
            {
                public static partial class css 
                {
                    public static class Assets
                    {
                        public const string jquery_fileupload_noscript_css = "~/Content/jQuery.FileUpload/css/jquery.fileupload-noscript.css";
                        public const string jquery_fileupload_ui_noscript_css = "~/Content/jQuery.FileUpload/css/jquery.fileupload-ui-noscript.css";
                        public const string jquery_fileupload_ui_css = "~/Content/jQuery.FileUpload/css/jquery.fileupload-ui.css";
                        public const string jquery_fileupload_css = "~/Content/jQuery.FileUpload/css/jquery.fileupload.css";
                    }
                }
                public static partial class img 
                {
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                }
            }
            public static partial class Promotion 
            {
                public static class Assets
                {
                }
            }
            public static partial class themes 
            {
                public static partial class @base 
                {
                    public static partial class images 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                        public const string accordion_css = "~/Content/themes/base/accordion.css";
                        public const string all_css = "~/Content/themes/base/all.css";
                        public const string autocomplete_css = "~/Content/themes/base/autocomplete.css";
                        public const string base_css = "~/Content/themes/base/base.css";
                        public const string button_css = "~/Content/themes/base/button.css";
                        public const string core_css = "~/Content/themes/base/core.css";
                        public const string datepicker_css = "~/Content/themes/base/datepicker.css";
                        public const string dialog_css = "~/Content/themes/base/dialog.css";
                        public const string draggable_css = "~/Content/themes/base/draggable.css";
                        public const string jquery_ui_css = "~/Content/themes/base/jquery-ui.css";
                        public const string jquery_ui_min_css = "~/Content/themes/base/jquery-ui.min.css";
                        public const string menu_css = "~/Content/themes/base/menu.css";
                        public const string progressbar_css = "~/Content/themes/base/progressbar.css";
                        public const string resizable_css = "~/Content/themes/base/resizable.css";
                        public const string selectable_css = "~/Content/themes/base/selectable.css";
                        public const string selectmenu_css = "~/Content/themes/base/selectmenu.css";
                        public const string slider_css = "~/Content/themes/base/slider.css";
                        public const string sortable_css = "~/Content/themes/base/sortable.css";
                        public const string spinner_css = "~/Content/themes/base/spinner.css";
                        public const string tabs_css = "~/Content/themes/base/tabs.css";
                        public const string theme_css = "~/Content/themes/base/theme.css";
                        public const string tooltip_css = "~/Content/themes/base/tooltip.css";
                    }
                }
                public static class Assets
                {
                }
            }
            public static class Assets
            {
                public const string jquery_timepicker_css = "~/Content/jquery.timepicker.css";
                public const string jquery_timepicker_min_css = "~/Content/jquery.timepicker.min.css";
                public const string PagedList_css = "~/Content/PagedList.css";
            }
        }
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal static class T4MVCHelpers {
    // You can change the ProcessVirtualPath method to modify the path that gets returned to the client.
    // e.g. you can prepend a domain, or append a query string:
    //      return "http://localhost" + path + "?foo=bar";
    private static string ProcessVirtualPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and must first be made absolute
        string path = VirtualPathUtility.ToAbsolute(virtualPath);
        
        // Add your own modifications here before returning the path
        return path;
    }

    // Calling ProcessVirtualPath through delegate to allow it to be replaced for unit testing
    public static Func<string, string> ProcessVirtualPath = ProcessVirtualPathDefault;

    // Calling T4Extension.TimestampString through delegate to allow it to be replaced for unit testing and other purposes
    public static Func<string, string> TimestampString = System.Web.Mvc.T4Extensions.TimestampString;

    // Logic to determine if the app is running in production or dev environment
    public static bool IsProduction() { 
        return (HttpContext.Current != null && !HttpContext.Current.IsDebuggingEnabled); 
    }
}





#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114


